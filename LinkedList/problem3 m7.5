#include <bits/stdc++.h>

using namespace std;
class Node{
    public:
        int val;
        Node* next;
        Node(int val){
            this->val=val;
            this->next=NULL;
        }
};
void insertNode(Node *&head,Node *& tail,int val){
     Node * newNode=new Node(val);
     if(head==NULL){
        head=newNode;
        tail=newNode;
        return;
     }
     tail->next=newNode;
     tail=newNode;
}
int sizeOfLinkedList(Node *head){
   Node * tmp=head;
   int cnt=0;
   while(tmp!=NULL){
    cnt++;
    tmp=tmp->next;
   }
   return cnt;
}
void print_list(Node *head){
    Node *tmp=head;
    while(tmp!=NULL){
        cout<<tmp->val<<" ";
        tmp=tmp->next;
    }
    cout<<endl;
}
void printListReverse(Node * head){
    Node * tmp=head;
    if(tmp==NULL){
        return;
    }
    printListReverse(tmp->next);
    cout<<tmp->val<<" ";
}
int main()
{   Node *head=NULL;
    Node *tail=NULL;
    while(true){
        int val;
        cin>>val;
        if(val==-1){
            break;
        }
        insertNode(head,tail,val);
    }
    int listSize=sizeOfLinkedList(head);
    int mid=listSize/2;
    if(listSize%2==0){
        Node * tmp1=head;
        Node * tmp2=head;
        int mid2=mid-1;
         for(int i=0;i<mid2;i++){
            tmp2=tmp2->next;
        }
        cout<<tmp2->val<<" ";
        for(int i=0;i<mid;i++){
            tmp1=tmp1->next;
        }
        cout<<tmp1->val;
    }else{
        Node * tmp=head;
        for(int i=0;i<mid;i++){
            tmp=tmp->next;
        }
        cout<<tmp->val;
    }

    return 0;
}
