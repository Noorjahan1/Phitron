
#include <bits/stdc++.h>

using namespace std;


class Node{
   public:
    int val;
    Node* next;
    Node(int val){
        this->val=val;
        this->next=NULL;
    }
};
void insert_at_tail(Node *&head,int v){
Node* newNode=new Node(v);
if(head==NULL){
    head=newNode;
    return;
}
Node *tmp=head;
while(tmp->next!=NULL){
    tmp=tmp->next;
}
tmp->next=newNode;

}
void duplicate(Node *head,vector <int>a){
    Node * tmp=head;
    bool flag=false;
    while(tmp!=NULL){
        if(a[tmp->val]>1){
            flag=true;
            break;
        }
        tmp=tmp->next;
    }
    if(flag==true){
        cout<<"YES";
    }else if(flag==false){
       cout<<"NO";
    }

}
void print_linked_list(Node *head){
Node * tmp=head;

while(tmp!=NULL){
    cout<<tmp->val<<" ";

    tmp=tmp->next;
}
cout<<endl;
}
void frequencyArray(Node * head){
   vector<int> a(100,0);
   Node * tmp=head;
   while(tmp!=NULL){
     a[tmp->val]++;
     tmp=tmp->next;
   }
  duplicate(head,a);

}

int main()
{
    Node* head=NULL;

    while(true){

    int val;
    cin>>val;
    if(val==-1){
        break;
    }
    insert_at_tail(head,val);
}
frequencyArray(head);

//print_linked_list(head);
    return 0;
}
